/**
 * IMPORTANT: Do not modify this file.
 *
 * This file is generated by the `pnpm run schema:generate` command and should
 * not be modified.
 *
 * Any changes to the schemas for `update_extension` files require the creation
 * of a new schema file at `https://github.com/Shopify/theme-liquid-docs`.
 *
 * This is necessary because Shopify must support legacy `update_extension.json`
 * scripts. Once a new schema is published, it must be supported forever without
 * breaking backward compatibility.
 */
import { zod as z } from '@shopify/cli-kit/node/schema';
export declare const schemaUrlV1 = "https://raw.githubusercontent.com/Shopify/theme-liquid-docs/main/schemas/update/update_extension_schema_v1.json";
export declare const schemaV1: z.ZodObject<{
    $schema: z.ZodString;
    theme_name: z.ZodString;
    theme_version: z.ZodString;
    operations: z.ZodArray<z.ZodObject<{
        id: z.ZodString;
        actions: z.ZodArray<z.ZodUnion<[z.ZodObject<{
            action: z.ZodLiteral<"move">;
            file: z.ZodEffects<z.ZodAny, any, any>;
            from_key: z.ZodString;
            to_key: z.ZodString;
        }, "strict", z.ZodTypeAny, {
            action: "move";
            from_key: string;
            to_key: string;
            file?: any;
        }, {
            action: "move";
            from_key: string;
            to_key: string;
            file?: any;
        }>, z.ZodObject<{
            action: z.ZodLiteral<"copy">;
            file: z.ZodEffects<z.ZodAny, any, any>;
            from_key: z.ZodString;
            to_key: z.ZodString;
        }, "strict", z.ZodTypeAny, {
            action: "copy";
            from_key: string;
            to_key: string;
            file?: any;
        }, {
            action: "copy";
            from_key: string;
            to_key: string;
            file?: any;
        }>, z.ZodObject<{
            action: z.ZodLiteral<"add">;
            file: z.ZodString;
            key: z.ZodString;
            value: z.ZodEffects<z.ZodAny, any, any>;
        }, "strict", z.ZodTypeAny, {
            action: "add";
            file: string;
            key: string;
            value?: any;
        }, {
            action: "add";
            file: string;
            key: string;
            value?: any;
        }>, z.ZodObject<{
            action: z.ZodLiteral<"update">;
            file: z.ZodString;
            key: z.ZodString;
            old_value: z.ZodString;
            new_value: z.ZodString;
        }, "strict", z.ZodTypeAny, {
            action: "update";
            file: string;
            key: string;
            old_value: string;
            new_value: string;
        }, {
            action: "update";
            file: string;
            key: string;
            old_value: string;
            new_value: string;
        }>, z.ZodObject<{
            action: z.ZodLiteral<"delete">;
            file: z.ZodString;
            key: z.ZodString;
            value: z.ZodOptional<z.ZodString>;
        }, "strict", z.ZodTypeAny, {
            action: "delete";
            file: string;
            key: string;
            value?: string | undefined;
        }, {
            action: "delete";
            file: string;
            key: string;
            value?: string | undefined;
        }>]>, "many">;
    }, "strict", z.ZodTypeAny, {
        id: string;
        actions: ({
            action: "move";
            from_key: string;
            to_key: string;
            file?: any;
        } | {
            action: "copy";
            from_key: string;
            to_key: string;
            file?: any;
        } | {
            action: "add";
            file: string;
            key: string;
            value?: any;
        } | {
            action: "update";
            file: string;
            key: string;
            old_value: string;
            new_value: string;
        } | {
            action: "delete";
            file: string;
            key: string;
            value?: string | undefined;
        })[];
    }, {
        id: string;
        actions: ({
            action: "move";
            from_key: string;
            to_key: string;
            file?: any;
        } | {
            action: "copy";
            from_key: string;
            to_key: string;
            file?: any;
        } | {
            action: "add";
            file: string;
            key: string;
            value?: any;
        } | {
            action: "update";
            file: string;
            key: string;
            old_value: string;
            new_value: string;
        } | {
            action: "delete";
            file: string;
            key: string;
            value?: string | undefined;
        })[];
    }>, "many">;
}, "strict", z.ZodTypeAny, {
    $schema: string;
    theme_name: string;
    theme_version: string;
    operations: {
        id: string;
        actions: ({
            action: "move";
            from_key: string;
            to_key: string;
            file?: any;
        } | {
            action: "copy";
            from_key: string;
            to_key: string;
            file?: any;
        } | {
            action: "add";
            file: string;
            key: string;
            value?: any;
        } | {
            action: "update";
            file: string;
            key: string;
            old_value: string;
            new_value: string;
        } | {
            action: "delete";
            file: string;
            key: string;
            value?: string | undefined;
        })[];
    }[];
}, {
    $schema: string;
    theme_name: string;
    theme_version: string;
    operations: {
        id: string;
        actions: ({
            action: "move";
            from_key: string;
            to_key: string;
            file?: any;
        } | {
            action: "copy";
            from_key: string;
            to_key: string;
            file?: any;
        } | {
            action: "add";
            file: string;
            key: string;
            value?: any;
        } | {
            action: "update";
            file: string;
            key: string;
            old_value: string;
            new_value: string;
        } | {
            action: "delete";
            file: string;
            key: string;
            value?: string | undefined;
        })[];
    }[];
}>;
