{"version":3,"file":"console.js","sourceRoot":"","sources":["../../../../src/cli/commands/theme/console.ts"],"names":[],"mappings":"AAAA,OAAO,EAAC,UAAU,EAAC,MAAM,gBAAgB,CAAA;AACzC,OAAO,YAAY,MAAM,kCAAkC,CAAA;AAC3D,OAAO,EAAC,gBAAgB,EAAC,MAAM,gCAAgC,CAAA;AAC/D,OAAO,EAAC,WAAW,EAAC,MAAM,2BAA2B,CAAA;AACrD,OAAO,EAAC,6BAA6B,EAAE,yBAAyB,EAAC,MAAM,+BAA+B,CAAA;AACtG,OAAO,EAAC,QAAQ,EAAC,MAAM,4BAA4B,CAAA;AACnD,OAAO,EAAC,UAAU,EAAE,aAAa,EAAC,MAAM,0BAA0B,CAAA;AAClE,OAAO,EAAC,OAAO,EAAC,MAAM,8BAA8B,CAAA;AAEpD,MAAqB,OAAQ,SAAQ,YAAY;IAW/C,KAAK,CAAC,GAAG;QACP,MAAM,EAAC,KAAK,EAAC,GAAG,MAAM,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAA;QACzC,MAAM,KAAK,GAAG,gBAAgB,CAAC,KAAK,CAAC,CAAA;QACrC,MAAM,QAAQ,GAAG,KAAK,CAAC,QAAQ,CAAA;QAE/B,MAAM,YAAY,GAAG,MAAM,yBAAyB,CAAC,KAAK,EAAE,QAAQ,EAAE,EAAE,EAAE,IAAI,CAAC,CAAA;QAC/E,MAAM,eAAe,GAAG,MAAM,6BAA6B,CAAC,EAAE,EAAE,QAAQ,CAAC,CAAA;QACzE,MAAM,OAAO,GAAG,uBAAuB,CAAA;QAEvC,aAAa,CAAC;YACZ,QAAQ,EAAE,yBAAyB;YACnC,IAAI,EAAE;gBACJ,uDAAuD;gBACvD,+EAA+E;gBAC/E,EAAC,IAAI,EAAE,EAAC,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,4CAA4C,EAAC,EAAC;gBAC1E,EAAC,IAAI,EAAE,GAAG,EAAC;aACZ;SACF,CAAC,CAAA;QAEF,UAAU,CAAC;YACT,IAAI,EAAE,CAAC,oCAAoC,EAAE,EAAC,IAAI,EAAE,EAAC,KAAK,EAAE,cAAc,EAAE,GAAG,EAAE,OAAO,EAAC,EAAC,EAAE,EAAC,IAAI,EAAE,GAAG,EAAC,CAAC;SACzG,CAAC,CAAA;QAEF,kEAAkE;QAClE,UAAU,CAAC,GAAG,EAAE,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE,IAAI,CAAC,CAAA;QAExC,OAAO,QAAQ,CAAC,CAAC,OAAO,EAAE,SAAS,CAAC,EAAE,EAAC,KAAK,EAAE,UAAU,EAAE,YAAY,CAAC,KAAK,EAAE,eAAe,EAAC,CAAC,CAAA;IACjG,CAAC;;AArCM,mBAAW,GAAG,2CAA2C,CAAA;AACzD,cAAM,GAAG,IAAI,CAAA;AAEb,aAAK,GAAG;IACb,GAAG,WAAW;IACd,KAAK,EAAE,UAAU,CAAC,KAAK;IACvB,QAAQ,EAAE,UAAU,CAAC,QAAQ;IAC7B,WAAW,EAAE,UAAU,CAAC,WAAW;CACpC,CAAA;eATkB,OAAO","sourcesContent":["import {themeFlags} from '../../flags.js'\nimport ThemeCommand from '../../utilities/theme-command.js'\nimport {ensureThemeStore} from '../../utilities/theme-store.js'\nimport {globalFlags} from '@shopify/cli-kit/node/cli'\nimport {ensureAuthenticatedStorefront, ensureAuthenticatedThemes} from '@shopify/cli-kit/node/session'\nimport {execCLI2} from '@shopify/cli-kit/node/ruby'\nimport {renderInfo, renderWarning} from '@shopify/cli-kit/node/ui'\nimport {openURL} from '@shopify/cli-kit/node/system'\n\nexport default class Console extends ThemeCommand {\n  static description = 'Early access feature: Shopify Liquid REPL'\n  static hidden = true\n\n  static flags = {\n    ...globalFlags,\n    store: themeFlags.store,\n    password: themeFlags.password,\n    environment: themeFlags.environment,\n  }\n\n  async run() {\n    const {flags} = await this.parse(Console)\n    const store = ensureThemeStore(flags)\n    const password = flags.password\n\n    const adminSession = await ensureAuthenticatedThemes(store, password, [], true)\n    const storefrontToken = await ensureAuthenticatedStorefront([], password)\n    const authUrl = 'http://localhost:9293'\n\n    renderWarning({\n      headline: 'This is a beta feature.',\n      body: [\n        'This command is beta, so it can change or be removed.',\n        'If you have any feedback or would like to to keep it, please leave an up-vote',\n        {link: {label: 'here', url: 'https://github.com/Shopify/cli/issues/1344'}},\n        {char: '.'},\n      ],\n    })\n\n    renderInfo({\n      body: ['Activate Shopify Liquid console on', {link: {label: 'your browser', url: authUrl}}, {char: '.'}],\n    })\n\n    // eslint-disable-next-line @typescript-eslint/no-misused-promises\n    setTimeout(() => openURL(authUrl), 2000)\n\n    return execCLI2(['theme', 'console'], {store, adminToken: adminSession.token, storefrontToken})\n  }\n}\n"]}